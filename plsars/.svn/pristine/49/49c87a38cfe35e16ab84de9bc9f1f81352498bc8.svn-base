package com.asj.pls.fragment;

import com.asj.pls.R;
import com.asj.pls.activity.SearchActivity;
import com.asj.pls.util.DialogUtils;
import com.asj.pls.util.LOGUtils;
import com.asj.pls.util.SPUtils;
import com.baidu.location.BDLocation;
import com.baidu.location.BDLocationListener;
import com.baidu.location.LocationClient;
import com.baidu.location.LocationClientOption;
import com.baidu.location.LocationClientOption.LocationMode;

import android.app.Dialog;
import android.content.Intent;
import android.graphics.Bitmap;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

public class MyTabFragmentOne extends Fragment implements OnClickListener{

	/** 
     * 位置状态栏
     */
    private TextView addressText;
    
    /** 
     * 定位按钮
     */
    private Button locationBtn;
	
    /** 
     * 商品搜索图标
     */
    private ImageView searchPdImage;
    
    /** 
	  * 定位核心sdk
	  */
	private LocationClient mLocationClient;
	
	/** 
     * 加载控件
     */
	private Dialog dialog;
	 
	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {  
        View indexLayout = inflater.inflate(R.layout.layout_index, container, false);
        
        addressText = (TextView)indexLayout.findViewById(R.id.search_address_txt);
        searchPdImage = (ImageView)indexLayout.findViewById(R.id.index_search_image);
        locationBtn = (Button)indexLayout.findViewById(R.id.index_locatin_btn);
        
        dialog = DialogUtils.createLoadingDialog(indexLayout.getContext(), "页面加载中...");
        
        if(!isLocation()){//网络状态正常且第一次定位
			mLocationClient = new LocationClient(indexLayout.getContext().getApplicationContext());//实例化LocationClient类
			mLocationClient.registerLocationListener(new MyLocationListener());//注册监听函数
			this.InitLocation();//设置定位参数
			mLocationClient.start();
        }else{
        	addressText.setText((String) SPUtils.get("isLocation", "请选择..", getActivity()));
		}
        locationBtn.setOnClickListener(this);
        addressText.setOnClickListener(this);
        searchPdImage.setOnClickListener(this);
        return indexLayout;  
    }

	@Override
	public void onClick(View v) {
		// TODO Auto-generated method stub
		switch(v.getId()){
		case R.id.search_address_txt://地址定位
			((OnClickListener)getActivity()).onClick(addressText);
			break;
		case R.id.index_locatin_btn://未定录地址定位
			((OnClickListener)getActivity()).onClick(addressText);
			break;
		case R.id.index_search_image://商品搜索
			Intent intent = new Intent(getActivity(),SearchActivity.class);
			startActivity(intent);
			getActivity().overridePendingTransition(R.anim.push_right_in, R.anim.push_current);
			break;	
		}
	}
	
	/**
	  * 定位
	  */
	 private void InitLocation(){
		LocationClientOption option = new LocationClientOption();
		option.setAddrType("all");
		option.setLocationMode(LocationMode.Hight_Accuracy);//设置定位模式
		option.setCoorType("gcj02");//返回的定位结果是百度经纬度，默认值gcj02
		option.setScanSpan(5000);//设置发起定位请求的间隔时间为5000ms
		option.setIsNeedAddress(true);
		mLocationClient.setLocOption(option);
	}
	    
	/**
	 * 实现实位回调监听
	 */
	public class MyLocationListener implements BDLocationListener {

		@Override
		public void onReceiveLocation(BDLocation location) {
			//Receive Location
			if(location != null && location.getStreet() != null){
				SPUtils.put("isLocation", "送至   " + location.getStreet(), getActivity());
				LOGUtils.d("location", location.getStreet());
				addressText.setText("送至   " + location.getStreet());
			}else{
				addressText.setText("请选择..");
			}
			mLocationClient.stop();
		}
	}
		
	/** 
	 * 判断是否第一次定位
	 */
	private boolean isLocation() {
		boolean isFirstRun = SPUtils.contains("isLocation",getActivity());
		return isFirstRun;
	}
	
	/** 
	 * 动作定位
	 */
	public void selfLocation(){
		mLocationClient.start();
	}
	
	
	public class MyWebViewClient extends WebViewClient {

		@Override
		public boolean shouldOverrideUrlLoading(WebView view, String url) {
			// 设置点击网页里面的链接还是在当前的webview里跳转
			view.loadUrl(url);
			return true;
		}

		// 设置页面加载前的事件
		public void onPageStarted(WebView view, String url, Bitmap favicon) {
			// TODO Auto-generated method stub
			super.onPageStarted(view, url, favicon);
			dialog.show();
		}

		// 设置页面加载后的事件
		@Override
		public void onPageFinished(WebView view, String url) {
			// TODO Auto-generated method stub
			super.onPageFinished(view, url);
			// pd.cancel();
			dialog.dismiss();
		}

		public void onReceivedError(WebView view, int errorCode,
				String description, String failingUrl) {
			// 加载页面报错时的处理
			Toast.makeText(getActivity(), "Oh no! " + description, Toast.LENGTH_SHORT).show();
		}

	}
}
